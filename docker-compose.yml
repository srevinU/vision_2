version: '3.1'

services:
  e2e:
    container_name: e2e-tests-${STAGE_NAME}
    build:
      dockerfile: ./e2e/Dockerfile
    volumes:
      - './e2e/specs:/usr/src/app/e2e/specs:rw'
    env_file:
      - ./e2e/env/.env.${STAGE_NAME}
    depends_on:
      - db
      - redis
      - users
      - auth
      - roles
    networks:
      - e2e_net

  db:
    container_name: database-${STAGE_NAME}
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: vision
    ports:
      - 3306:3306
    networks:
      - db_net
      - adminer_net
      - jenkins_net

  redis:
    container_name: redis-${STAGE_NAME}
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - redis_net
      - jenkins_net

  jenkins:
    container_name: jenkins-${STAGE_NAME}
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    env_file:
      - ./e2e/env/.env.${STAGE_NAME}
    ports:
      - 8080:8080
    networks:
      - jenkins_net

  adminer:
    container_name: adminer-${STAGE_NAME}
    image: adminer
    restart: always
    ports:
      - 8282:8080
    networks:
      - adminer_net
    depends_on:
      - db

  users:
    container_name: users-api-${STAGE_NAME}
    restart: always
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/env/.env.${STAGE_NAME}
    ports:
      - 3000:3000
    volumes:
      - './apps/users:/usr/src/app/apps/users:rw'
      - './libs/common:/usr/src/app/libs/common:rw'
    networks:
      - e2e_net
      - db_net
      - jenkins_net
    depends_on:
      - db
      - jenkins_net

  auth:
    container_name: auth-api-${STAGE_NAME}
    restart: always
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/env/.env.${STAGE_NAME}
    ports:
      - 3001:3001
    volumes:
      - './apps/auth:/usr/src/app/apps/auth:rw'
      - './libs/common:/usr/src/app/libs/common:rw'
    networks:
      - e2e_net
      - redis_net
      - db_net
      - jenkins_net
    depends_on:
      - db
      - redis
      - jenkins_net

  roles:
    container_name: roles-api-${STAGE_NAME}
    restart: always
    build:
      context: .
      dockerfile: ./apps/roles/Dockerfile
      target: development
    command: npm run start:dev roles
    env_file:
      - ./apps/roles/env/.env.${STAGE_NAME}
    ports:
      - 3002:3002
    volumes:
      - ./apps/roles:/usr/src/app/apps/roles:rw
      - ./libs/common:/usr/src/app/libs/common:rw
    networks:
      - e2e_net
      - db_net
      - jenkins_net
    depends_on:
      - db

volumes:
  redis:
    driver: local

networks:
  adminer_net:
    name: adminer_net_${STAGE_NAME}
  e2e_net:
    name: e2e_net_${STAGE_NAME}
  redis_net:
    name: redis_net_${STAGE_NAME}
  db_net:
    name: db_net_${STAGE_NAME}
  jenkins_net:
    name: jenkins_net_${STAGE_NAME}
